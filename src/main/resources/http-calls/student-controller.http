### Student Controller Tests
### Base URL
@baseUrl = http://localhost:8080
@authToken = Bearer eyJhbGciOiJIUzM4NCJ9.eyJyb2xlIjoiQURNSU4iLCJuYW1lIjoiR293dGhhbSBTaXZhIEt1bWFyIiwidXNlcklkIjoiN2JkYTlmOGQtMDdmOC00N2YyLWE3MjMtMTY4MDAzYThiZTM5IiwiZW1haWwiOiJnb3d0aGFtLmFsYS4yb281QGdtYWlsLmNvbSIsInN1YiI6Imdvd3RoYW0tMm9vNSIsImlhdCI6MTc1MjE2MzE5NCwiZXhwIjoxNzUyMjQ5NTk0fQ._zOnaWsKlTrBwQ8TC3LxhMvLezBppWMX1qJ1WryT8YlvYz6h23j9Ol_LEGkCMib7

### 1. Create Student
POST {{baseUrl}}/api/students
Authorization: {{authToken}}
Content-Type: application/json

{
  "name": "John Smith",
  "email": "john.smith@student.crt.com",
  "phone": "+1234567801",
  "rollNumber": "22CS001",
  "regNum": "22001",
  "department": "Computer Science",
  "section": "A",
  "batch": "Y22",
  "crtEligibility": true,
  "feedback": "Good performance",
  "attendancePercentage": 85.5
}

### 2. Create Another Student
POST {{baseUrl}}/api/students
Authorization: {{authToken}}
Content-Type: application/json

{
  "name": "Jane Doe",
  "email": "jane.doe@student.crt.com",
  "phone": "+1234567802",
  "rollNumber": "22CS002",
  "regNum": "22002",
  "department": "Computer Science",
  "section": "A",
  "batch": "Y22",
  "crtEligibility": true,
  "feedback": "Excellent student",
  "attendancePercentage": 92.0
}

### 3. Create Third Student
POST {{baseUrl}}/api/students
Authorization: {{authToken}}
Content-Type: application/json

{
  "name": "Mike Johnson",
  "email": "mike.johnson@student.crt.com",
  "phone": "+1234567803",
  "rollNumber": "23CS001",
  "regNum": "23001",
  "department": "Computer Science",
  "section": "B",
  "batch": "Y23",
  "crtEligibility": false,
  "feedback": "Needs improvement",
  "attendancePercentage": 65.0
}

### 4. Get All Students
GET {{baseUrl}}/api/students
Authorization: {{authToken}}

### 5. Get Student by ID (Using real student UUID - John Smith)
GET {{baseUrl}}/api/students/decef903-70df-430c-b39f-2b95b74ca230
Authorization: {{authToken}}

### 6. Get Student by Registration Number
GET {{baseUrl}}/api/students/regnum/22001
Authorization: {{authToken}}

### 7. Get Student by Email
GET {{baseUrl}}/api/students/email/jane.doe@student.crt.com
Authorization: {{authToken}}

### 8. Update Student (Replace with actual UUID)
PUT {{baseUrl}}/api/students/550e8400-e29b-41d4-a716-446655440003
Authorization: {{authToken}}
Content-Type: application/json

{
  "name": "John Smith Updated",
  "email": "john.smith.updated@student.crt.com",
  "phone": "+1234567801",
  "rollNumber": "22CS001",
  "regNum": "22001",
  "department": "Computer Science",
  "section": "A",
  "batch": "Y22",
  "crtEligibility": true,
  "feedback": "Improved performance",
  "attendancePercentage": 88.0
}

### 9. Add Student to CRT (Replace with actual UUID)
POST {{baseUrl}}/api/students/550e8400-e29b-41d4-a716-446655440003/add-to-crt?reason=Improved attendance and performance
Authorization: {{authToken}}

### 10. Remove Student from CRT (Replace with actual UUID)
POST {{baseUrl}}/api/students/550e8400-e29b-41d4-a716-446655440003/remove-from-crt?reason=Poor attendance
Authorization: {{authToken}}

### 11. Delete Student (Replace with actual UUID)
DELETE {{baseUrl}}/api/students/550e8400-e29b-41d4-a716-446655440003
Authorization: {{authToken}}

### 12. Create More Students for Testing
POST {{baseUrl}}/api/students
Authorization: {{authToken}}
Content-Type: application/json

{
  "name": "Alice Brown",
  "email": "alice.brown@student.crt.com",
  "phone": "+1234567804",
  "rollNumber": "22CS003",
  "regNum": "22003",
  "department": "Computer Science",
  "section": "A",
  "batch": "Y22",
  "crtEligibility": true,
  "feedback": "Consistent performer",
  "attendancePercentage": 78.5
}

###
POST {{baseUrl}}/api/students
Authorization: {{authToken}}
Content-Type: application/json

{
  "name": "Bob Wilson",
  "email": "bob.wilson@student.crt.com",
  "phone": "+1234567805",
  "rollNumber": "23CS002",
  "regNum": "23002",
  "department": "Computer Science",
  "section": "B",
  "batch": "Y23",
  "crtEligibility": true,
  "feedback": "Good potential",
  "attendancePercentage": 82.0
}
