### Section Controller Tests
### Base URL
@baseUrl = http://localhost:8080
@authToken = Bearer eyJhbGciOiJIUzM4NCJ9.eyJyb2xlIjoiQURNSU4iLCJuYW1lIjoiR293dGhhbSBTaXZhIEt1bWFyIiwidXNlcklkIjoiN2JkYTlmOGQtMDdmOC00N2YyLWE3MjMtMTY4MDAzYThiZTM5IiwiZW1haWwiOiJnb3d0aGFtLmFsYS4yb281QGdtYWlsLmNvbSIsInN1YiI6Imdvd3RoYW0tMm9vNSIsImlhdCI6MTc1MjE2MzE5NCwiZXhwIjoxNzUyMjQ5NTk0fQ._zOnaWsKlTrBwQ8TC3LxhMvLezBppWMX1qJ1WryT8YlvYz6h23j9Ol_LEGkCMib7

### 1. Create Section (Using real Training UUID - Dr. Sarah Wilson)
POST {{baseUrl}}/api/sections
Authorization: {{authToken}}
Content-Type: application/json

{
  "TrainingId": "282b7486-9517-4c47-a548-6c8e84deeb5f",
  "sectionName": "CRT-Section-A"
}

### 2. Create Another Section (Replace TrainingId with actual UUID)
POST {{baseUrl}}/api/sections
Authorization: {{authToken}}
Content-Type: application/json

{
  "TrainingId": "550e8400-e29b-41d4-a716-446655440002",
  "sectionName": "CRT-Section-B"
}

### 3. Create Third Section (Replace TrainingId with actual UUID)
POST {{baseUrl}}/api/sections
Authorization: {{authToken}}
Content-Type: application/json

{
  "TrainingId": "550e8400-e29b-41d4-a716-446655440002",
  "sectionName": "CRT-Section-C"
}

### 4. Get All Sections
GET {{baseUrl}}/api/sections
Authorization: {{authToken}}

### 5. Get Section by ID (Replace with actual UUID)
GET {{baseUrl}}/api/sections/550e8400-e29b-41d4-a716-446655440004
Authorization: {{authToken}}

### 6. Get Sections by Training (Replace with actual UUID)
GET {{baseUrl}}/api/sections/Training/550e8400-e29b-41d4-a716-446655440002
Authorization: {{authToken}}

### 7. Update Section (Replace sectionId with actual UUID)
PUT {{baseUrl}}/api/sections/550e8400-e29b-41d4-a716-446655440004
Authorization: {{authToken}}
Content-Type: application/json

{
  "TrainingId": "550e8400-e29b-41d4-a716-446655440002",
  "sectionName": "CRT-Section-A-Updated"
}

### 8. Register Students to Section via CSV (Replace sectionId with actual UUID)
POST {{baseUrl}}/api/sections/550e8400-e29b-41d4-a716-446655440004/students
Authorization: {{authToken}}
Content-Type: application/json

{
  "file": "../test-data/students.csv"
}

### 9. Update Student Section (Replace studentId and sectionId with actual UUIDs)
PUT {{baseUrl}}/api/sections/student/550e8400-e29b-41d4-a716-446655440003/section/550e8400-e29b-41d4-a716-446655440004
Authorization: {{authToken}}

### 10. Delete Section (Replace with actual UUID)
DELETE {{baseUrl}}/api/sections/550e8400-e29b-41d4-a716-446655440004
Authorization: {{authToken}}

### 11. Create More Sections for Testing
POST {{baseUrl}}/api/sections
Authorization: {{authToken}}
Content-Type: application/json

{
  "TrainingId": "550e8400-e29b-41d4-a716-446655440002",
  "sectionName": "CRT-Advanced-Section"
}

###
POST {{baseUrl}}/api/sections
Authorization: {{authToken}}
Content-Type: application/json

{
  "TrainingId": "550e8400-e29b-41d4-a716-446655440002",
  "sectionName": "CRT-Beginner-Section"
}
